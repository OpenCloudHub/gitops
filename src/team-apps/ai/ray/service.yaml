apiVersion: ray.io/v1
kind: RayService
metadata:
  name: ray-ai-platform
  namespace: ai
spec:
  # Serve configuration for wine classifier (mock for now)
  serveConfigV2: |
    applications:
      - name: fruit_app
        import_path: fruit.deployment_graph
        route_prefix: /fruit
        runtime_env:
          working_dir: "https://github.com/ray-project/test_dag/archive/78b4a5da38796123d9f9ffff59bab2792a043e95.zip"
        deployments:
          - name: FruitMarket
            num_replicas: 1
            ray_actor_options:
              num_cpus: 0.1

  rayClusterConfig:
    rayVersion: '2.48.0'

    # Head node configuration - runs on application node
    headGroupSpec:
      rayStartParams:
        dashboard-host: '0.0.0.0'
        metrics-export-port: '8080'

      template:
        spec:
          nodeSelector:
            node.opencloudhub.org/application: "true"

          containers:
          - name: ray-head
            image: rayproject/ray:2.48.0-py312
            ports:
            - containerPort: 6379
              name: gcs
              protocol: TCP
            - containerPort: 8265
              name: dashboard
              protocol: TCP
            - containerPort: 10001
              name: client
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 8000
              name: serve
              protocol: TCP

            resources:
              limits:
                cpu: "2"
                memory: "4Gi"
              requests:
                cpu: "1"
                memory: "2Gi"

            env:
            - name: RAY_enable_autoscaler_v2
              value: "false"  # Disable for local Kind cluster
            - name: RAY_GRAFANA_IFRAME_HOST
              value: "https://grafana.observability.internal.opencloudhub.org"
            - name: RAY_GRAFANA_HOST
              value: "http://grafana.observability.svc.cluster.local:80"
            - name: RAY_PROMETHEUS_HOST
              value: "http://prometheus-server.observability.svc.cluster.local:80"
            - name: RAY_RUNTIME_ENV_HOOK
              value: ray._private.runtime_env.uv_runtime_env_hook.hook

    # Worker groups
    workerGroupSpecs:
    # CPU workers for general tasks and serving
    - groupName: cpu-workers
      replicas: 1
      minReplicas: 1
      maxReplicas: 2
      rayStartParams:
        metrics-export-port: '8080'

      template:
        spec:
          nodeSelector:
            node.opencloudhub.org/application: "true"

          containers:
          - name: ray-worker
            image: rayproject/ray:2.48.0-py312

            resources:
              limits:
                cpu: "2"
                memory: "4Gi"
              requests:
                cpu: "1"
                memory: "2Gi"

            env:
            - name: RAY_enable_autoscaler_v2
              value: "false"

    # GPU workers for training - scheduled on GPU nodes
    - groupName: gpu-workers
      replicas: 1
      minReplicas: 0
      maxReplicas: 1  # Adjust based on your GPU count
      rayStartParams:
        metrics-export-port: '8080'

      template:
        spec:
          nodeSelector:
            node.opencloudhub.org/gpu-training: "true"

          # Tolerations if you add taints to GPU nodes
          # tolerations:
          # - key: "nvidia.com/gpu"
          #   operator: "Equal"
          #   value: "true"
          #   effect: "NoSchedule"

          containers:
          - name: ray-worker
            image: rayproject/ray:2.48.0-py312-gpu  # GPU-enabled image

            resources:
              limits:
                cpu: "4"
                memory: "8Gi"
                nvidia.com/gpu: "1"  # Request GPU
              requests:
                cpu: "2"
                memory: "4Gi"
                nvidia.com/gpu: "1"

            env:
            - name: RAY_enable_autoscaler_v2
              value: "false"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "compute,utility"
